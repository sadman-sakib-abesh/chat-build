{"version":3,"sources":["Chat.js","logo.svg","Join.js","App.js","reportWebVitals.js","index.js"],"names":["socket","Join","useState","name","setName","room","setRoom","id","type","onChange","e","target","value","placeholder","to","Chat","msg","setMsg","search","useLocation","queryString","parse","useEffect","io","connect","reconnect","emit","error","alert","window","location","replace","on","msgs","existingMsg","close","className","map","message","index","trim","toLowerCase","user","text","onKeyDown","key","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIAUIA,E,0CCVW,I,4BCkCAC,EA7BJ,WAAK,IAAD,EAEQC,mBAAS,IAFjB,mBAENC,EAFM,KAEDC,EAFC,OAGMF,mBAAS,IAHf,mBAGRG,EAHQ,KAGHC,EAHG,KASb,OACI,qCACJ,uBADI,KACI,uBACR,iCACI,sBAAKC,GAAG,OAAR,UACN,uBACM,uBAAOC,KAAK,OAAOD,GAAG,KAAKE,SAAU,SAACC,GAAD,OAAKN,EAAQM,EAAEC,OAAOC,QAAQC,YAAY,SACnF,uBAAM,uBACL,uBAAOL,KAAK,OAAOD,GAAG,KAAKE,SAAU,SAACC,GAAD,OAAKJ,EAAQI,EAAEC,OAAOC,QAAQC,YAAY,SAC7E,uBACC,uBAAM,cAAC,IAAD,CAAMC,GAAE,qBAAgBX,EAAhB,iBAA6BE,GAAQE,GAAG,MAAhD,0D,kEFkEGQ,EA5EF,WAAO,IAAD,EACEb,mBAAS,IADX,mBACVc,EADU,KACNC,EADM,KAEVC,EAAQC,cAARD,OAFU,EAGCE,IAAYC,MAAMH,GAA7Bf,EAHU,EAGVA,KAAKE,EAHK,EAGLA,KAEdiB,qBAAU,WAcV,OAbEtB,EAAOuB,IAAGC,QAAQ,4CAA4C,CAACC,WAAU,KAClEC,KAAK,OAAO,CAACvB,OAAKE,SAAM,SAACsB,GAC9BC,MAAMD,GACNE,OAAOC,SAASC,QAAQ,QAK1B/B,EAAOgC,GAAG,QAAO,SAACC,GAEhBhB,GAAO,SAACiB,GAAD,4BAAmBA,GAAnB,CAA+BD,UAGnC,WACLjC,EAAO0B,KAAK,cACZ1B,EAAOmC,WAGP,IAqBA,OACI,gCAEL,eAAC,IAAD,CAAgB5B,GAAG,OAAO6B,UAAU,OAApC,UACC,sBAAK7B,GAAG,SAAR,UAAkBF,EAAK,cAAC,IAAD,CAAMS,GAAG,IAAIP,GAAG,QAAhB,kBACvB,uBAAK,uBAAK,uBAETS,EAAIqB,KAAI,SAACC,EAAQC,GAAT,OAEP,sBAAKH,UAAWjC,EAAKqC,OAAOC,gBAAgBH,EAAQI,KAAK,OAAO,UAAhE,UACA,sBAAMN,UAAU,OAAhB,SAAuB,4BAAIE,EAAQI,SAAgB,sBAAMN,UAAU,eAAhB,SAAgCE,EAAQK,OAC3F,gCAQJ,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBACvB,qBAAKpC,GAAG,UAAR,SACA,uBAAOM,YAAY,KAAKN,GAAG,KAAKqC,UA7BvB,SAAClC,GACG,UAAVA,EAAEmC,KAAmBnC,EAAEC,OAAOC,QACnCZ,EAAO0B,KAAK,MAAMhB,EAAEC,OAAOC,OAC3BF,EAAEC,OAAOC,MAAM,aGjCAkC,EAfL,WACR,OACE,mCACA,cAAC,IAAD,UACA,eAAC,IAAD,WACA,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWhD,IACnC,cAAC,IAAD,CAAO+C,KAAK,QAAQC,UAAWlC,YCAlBmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b531a4da.chunk.js","sourcesContent":["import logo from './logo.svg';\r\nimport './App.css';\r\nimport React,{useEffect,useState,createRef} from 'react'\r\nimport {useLocation,Link} from 'react-router-dom'\r\nimport queryString from 'query-string'\r\nimport io from 'socket.io-client'\r\nimport ScrollToBottom  from 'react-scroll-to-bottom'\r\n\r\n\r\n\r\nlet socket;\r\n\r\n\r\n\r\nconst Chat = () => {\r\n  const [msg,setMsg]=useState([])\r\n  const {search}=useLocation()\r\n  const {name,room}=queryString.parse(search );\r\n\r\nuseEffect(()=>{\r\n  socket=io.connect(\"https://cherry-plaid-diagnostic.glitch.me\",{reconnect:false})\r\n  socket.emit(\"join\",{name,room},(error)=>{\r\n    alert(error)\r\n    window.location.replace(\"/\");\r\n  })\r\n  \r\n  \r\n  \r\n  socket.on(\"msgs\",(msgs)=>{\r\n    \r\n    setMsg((existingMsg)=>[...existingMsg,msgs])\r\n  })\r\n\r\nreturn ()=>{\r\n  socket.emit(\"disconnect\");\r\n  socket.close();\r\n}\r\n  \r\n},[])\r\n\r\nfunction toggle() {\r\n  var x = document.getElementById(\"users\");\r\n  if (x.style.display === \"none\") {\r\n    x.style.display = \"block\";\r\n  } else {\r\n    x.style.display = \"none\";\r\n  }\r\n}\r\n\r\n  \r\n  \r\nconst send=(e)=>{\r\n  if(e.key === \"Enter\" && e.target.value){\r\nsocket.emit(\"msg\",e.target.value)\r\ne.target.value=\"\";\r\n\r\n  }\r\n}\r\n  \r\n  return(\r\n      <div>\r\n    \r\n <ScrollToBottom id=\"body\" className=\"root\">\r\n  <nav id=\"header\">{room}<Link to=\"/\" id=\"leave\">x</Link></nav>\r\n  <br/><br/><br/>\r\n \r\n  {msg.map((message,index)=>\r\n   \r\n    <div className={name.trim().toLowerCase()===message.user?\"self\":\"message\"}>\r\n    <span className=\"user\"><b>{message.user}</b></span><span className=\"message-text\">{message.text}</span>\r\n    <br />\r\n    </div>\r\n  \r\n  )}\r\n  \r\n\r\n\r\n</ScrollToBottom>\r\n<br/><br/><br/><br/><br/><br/>\r\n  <div id=\"sending\">\r\n  <input placeholder=\"Aa\" id='in' onKeyDown={send} />\r\n  </div>\r\n\r\n  \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Chat;\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\nimport React,{Fregment,useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Join=()=>{\r\n  \r\n  const [name,setName]=useState(\"\");\r\nconst [room,setRoom]=useState(\"\");\r\n  \r\n  \r\n  \r\n  \r\n    \r\n  return(\r\n      <>\r\n  <br />  <br />\r\n  <center>\r\n      <div id=\"full\">\r\n<br />\r\n      <input type=\"text\" id=\"in\" onChange={(e)=>setName(e.target.value)} placeholder=\"name\" />\r\n  <br /><br/>\r\n   <input type=\"text\" id=\"in\" onChange={(e)=>setRoom(e.target.value)} placeholder=\"room\"/>\r\n     <br />\r\n      <br /><Link to={`/Chat?name=${name}&room=${room}`} id=\"btn\">  &nbsp;&nbsp;&nbsp; JOIN &nbsp;&nbsp;&nbsp;   </Link>\r\n      </div>\r\n      </center>\r\n  \r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Join;\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Join from './Join'\r\nimport Chat from './Chat'\r\nimport React,{Fregment} from 'react'\r\nimport {BrowserRouter as Router,Route,Link,Switch} from 'react-router-dom'\r\nconst App=()=>{\r\n  return(\r\n    <>\r\n    <Router>\r\n    <Switch>\r\n    <Route exact path=\"/\" component={Join} />\r\n  <Route path=\"/Chat\" component={Chat} />\r\n    </Switch>\r\n    </Router>\r\n </>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}